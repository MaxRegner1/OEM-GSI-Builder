name: OEM GSI Builder

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Load Configuration
        uses: falti/dotenv-action@v0.2.5
        id: config
        with:
          path: config.env

      - name: Check Configuration
        run: |
          function required () { if ! [[ "$1" ]]; then echo "$2 variable can't be null." && exit 1; fi }
          required "${{ secrets.USERNAME }}" "USERNAME secret"
          required "${{ secrets.PASSWORD }}" "PASSWORD secret"

          required "${{ steps.config.outputs.tool_repo }}" "TOOL_REPO config"
          required "${{ steps.config.outputs.url }}" "URL config"
          required "${{ steps.config.outputs.firmware_type }}" "FIRMWARE_TYPE config"
          required "${{ steps.config.outputs.sourceforge_dir }}" "SOURCEFORGE_DIR config"
          required "${{ steps.config.outputs.output_type }}" "OUTPUT_TYPE config"

      - name: Setup ErfanGSIs Tools
        run: |
          git clone --recurse-submodules "${{ steps.config.outputs.tool_repo }}"
          bash ErfanGSIs/setup.sh
          sed -i '$d' ErfanGSIs/url2GSI.sh

      - name: Build A/B
        if: ${{ steps.config.outputs.output_type == 'all' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" "${{ steps.config.outputs.extra_args }}"

      - name: Build AB
        if: ${{ steps.config.outputs.output_type == 'ab' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" --ab "${{ steps.config.outputs.extra_args }}"

      - name: Build AOnly
        if: ${{ steps.config.outputs.output_type == 'a' }}
        run: |
          sudo ./ErfanGSIs/url2GSI.sh "${{ steps.config.outputs.url }}" "${{ steps.config.outputs.firmware_type }}" --aonly "${{ steps.config.outputs.extra_args }}"

      - name: Pre-Upload
        run: |
          mkdir build/
          sudo mv ErfanGSIs/output/*.img build/
          gzip -r build/
          sudo mv ErfanGSIs/output/*.txt build/

      - name: Archive Artifact
        uses: actions/upload-artifact@v2
        with:
          name: gsi-artifact
          path: build/
